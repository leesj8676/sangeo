{"remainingRequest":"C:\\Users\\SSAFY\\Documents\\GitHub\\skeleton-project\\frontend\\node_modules\\vue-loader-v16\\dist\\index.js??ref--0-1!C:\\Users\\SSAFY\\Documents\\GitHub\\skeleton-project\\frontend\\src\\views\\conferences\\conference-detail.vue?vue&type=template&id=3702d250","dependencies":[{"path":"C:\\Users\\SSAFY\\Documents\\GitHub\\skeleton-project\\frontend\\src\\views\\conferences\\conference-detail.vue","mtime":1657527749723},{"path":"C:\\Users\\SSAFY\\Documents\\GitHub\\skeleton-project\\frontend\\node_modules\\babel-loader\\lib\\index.js","mtime":315532800000},{"path":"C:\\Users\\SSAFY\\Documents\\GitHub\\skeleton-project\\frontend\\node_modules\\vue-loader-v16\\dist\\templateLoader.js","mtime":499162500000},{"path":"C:\\Users\\SSAFY\\Documents\\GitHub\\skeleton-project\\frontend\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\SSAFY\\Documents\\GitHub\\skeleton-project\\frontend\\node_modules\\vue-loader-v16\\dist\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:DQogIHt7ICRyb3V0ZS5wYXJhbXMuY29uZmVyZW5jZUlkICsgJ+uyiCDrsKkg7IOB7IS4IOuztOq4sCDtjpjsnbTsp4AnIH19DQo="},{"version":3,"sources":["C:\\Users\\SSAFY\\Documents\\GitHub\\skeleton-project\\frontend\\src\\views\\conferences\\conference-detail.vue"],"names":[],"mappings":";EACE,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC","file":"C:/Users/SSAFY/Documents/GitHub/skeleton-project/frontend/src/views/conferences/conference-detail.vue","sourceRoot":"","sourcesContent":["<template>\r\n  {{ $route.params.conferenceId + '번 방 상세 보기 페이지' }}\r\n</template>\r\n<style>\r\n</style>\r\n<script>\r\nimport { reactive, onMounted, onUnmounted } from 'vue'\r\nimport { useStore } from 'vuex'\r\nimport { useRoute } from 'vue-router'\r\n\r\nexport default {\r\n  name: 'conference-detail',\r\n\r\n  setup () {\r\n    const route = useRoute()\r\n    const store = useStore()\r\n    const state = reactive({\r\n      conferenceId: ''\r\n    })\r\n\r\n    // 페이지 진입시 불리는 훅\r\n    onMounted(() => {\r\n      state.conferenceId = route.params.conferenceId\r\n      store.commit('root/setMenuActiveMenuName', 'home')\r\n    })\r\n\r\n    // 페이지 이탈시 불리는 훅\r\n    onUnmounted(() => {\r\n      state.conferenceId = ''\r\n    })\r\n\r\n    return { state }\r\n  }\r\n}\r\n</script>\r\n"]}]}