{"remainingRequest":"C:\\Users\\SSAFY\\Documents\\GitHub\\S07P12E207\\frontend\\node_modules\\vue-loader-v16\\dist\\index.js??ref--0-1!C:\\Users\\SSAFY\\Documents\\GitHub\\S07P12E207\\frontend\\src\\views\\main\\components\\login-dialog.vue?vue&type=template&id=fb9db454","dependencies":[{"path":"C:\\Users\\SSAFY\\Documents\\GitHub\\S07P12E207\\frontend\\src\\views\\main\\components\\login-dialog.vue","mtime":1659493240028},{"path":"C:\\Users\\SSAFY\\Documents\\GitHub\\S07P12E207\\frontend\\node_modules\\babel-loader\\lib\\index.js","mtime":315532800000},{"path":"C:\\Users\\SSAFY\\Documents\\GitHub\\S07P12E207\\frontend\\node_modules\\vue-loader-v16\\dist\\templateLoader.js","mtime":499162500000},{"path":"C:\\Users\\SSAFY\\Documents\\GitHub\\S07P12E207\\frontend\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\SSAFY\\Documents\\GitHub\\S07P12E207\\frontend\\node_modules\\vue-loader-v16\\dist\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:DQogIDxlbC1kaWFsb2cgY3VzdG9tLWNsYXNzPSJsb2dpbi1kaWFsb2ciIHRpdGxlPSLroZzqt7jsnbgiIHYtbW9kZWw9InN0YXRlLmRpYWxvZ1Zpc2libGUiIEBjbG9zZT0iaGFuZGxlQ2xvc2UiPg0KICAgIDxlbC1mb3JtIDptb2RlbD0ic3RhdGUuZm9ybSIgOnJ1bGVzPSJzdGF0ZS5ydWxlcyIgcmVmPSJsb2dpbkZvcm0iIDpsYWJlbC1wb3NpdGlvbj0ic3RhdGUuZm9ybS5hbGlnbiI+DQogICAgICA8ZWwtZm9ybS1pdGVtIHByb3A9ImlkIiBsYWJlbD0i7JWE7J2065SUIiA6bGFiZWwtd2lkdGg9InN0YXRlLmZvcm1MYWJlbFdpZHRoIiA+DQogICAgICAgIDxlbC1pbnB1dCB2LW1vZGVsPSJzdGF0ZS5mb3JtLmlkIiBhdXRvY29tcGxldGU9Im9mZiI+PC9lbC1pbnB1dD4NCiAgICAgIDwvZWwtZm9ybS1pdGVtPg0KICAgICAgPGVsLWZvcm0taXRlbSBwcm9wPSJwYXNzd29yZCIgbGFiZWw9Iuu5hOuwgOuyiO2YuCIgOmxhYmVsLXdpZHRoPSJzdGF0ZS5mb3JtTGFiZWxXaWR0aCI+DQogICAgICAgIDxlbC1pbnB1dCB2LW1vZGVsPSJzdGF0ZS5mb3JtLnBhc3N3b3JkIiBhdXRvY29tcGxldGU9Im9mZiIgc2hvdy1wYXNzd29yZD48L2VsLWlucHV0Pg0KICAgICAgPC9lbC1mb3JtLWl0ZW0+DQogICAgPC9lbC1mb3JtPg0KICAgIDx0ZW1wbGF0ZSAjZm9vdGVyPg0KICAgICAgPHNwYW4gY2xhc3M9ImRpYWxvZy1mb290ZXIiPg0KICAgICAgICA8ZWwtYnV0dG9uIHR5cGU9InByaW1hcnkiIEBjbGljaz0iY2xpY2tMb2dpbiI+66Gc6re47J24PC9lbC1idXR0b24+DQogICAgICA8L3NwYW4+DQogICAgPC90ZW1wbGF0ZT4NCiAgPC9lbC1kaWFsb2c+DQo="},{"version":3,"sources":["C:\\Users\\SSAFY\\Documents\\GitHub\\S07P12E207\\frontend\\src\\views\\main\\components\\login-dialog.vue"],"names":[],"mappings":";EACE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;IACnG,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;MAClG,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE;QACtE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;MACjE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;MACdrF,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;IAChB,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;IACT,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;MACf,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;QACzB,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;MAC9D,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;IACR,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;EACZ,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC","file":"C:/Users/SSAFY/Documents/GitHub/S07P12E207/frontend/src/views/main/components/login-dialog.vue","sourceRoot":"","sourcesContent":["<template>\r\n  <el-dialog custom-class=\"login-dialog\" title=\"로그인\" v-model=\"state.dialogVisible\" @close=\"handleClose\">\r\n    <el-form :model=\"state.form\" :rules=\"state.rules\" ref=\"loginForm\" :label-position=\"state.form.align\">\r\n      <el-form-item prop=\"id\" label=\"아이디\" :label-width=\"state.formLabelWidth\" >\r\n        <el-input v-model=\"state.form.id\" autocomplete=\"off\"></el-input>\r\n      </el-form-item>\r\n      <el-form-item prop=\"password\" label=\"비밀번호\" :label-width=\"state.formLabelWidth\">\r\n        <el-input v-model=\"state.form.password\" autocomplete=\"off\" show-password></el-input>\r\n      </el-form-item>\r\n    </el-form>\r\n    <template #footer>\r\n      <span class=\"dialog-footer\">\r\n        <el-button type=\"primary\" @click=\"clickLogin\">로그인</el-button>\r\n      </span>\r\n    </template>\r\n  </el-dialog>\r\n</template>\r\n<style>\r\n.login-dialog {\r\n  width: 400px !important;\r\n  height: 300px;\r\n}\r\n.login-dialog .el-dialog__headerbtn {\r\n  float: right;\r\n}\r\n.login-dialog .el-form-item__content {\r\n  margin-left: 0 !important;\r\n  float: right;\r\n  width: 200px;\r\n  display: inline-block;\r\n}\r\n.login-dialog .el-form-item {\r\n  margin-bottom: 20px;\r\n}\r\n.login-dialog .el-form-item__error {\r\n  font-size: 12px;\r\n  color: red;\r\n}\r\n.login-dialog .el-input__suffix {\r\n  display: none;\r\n}\r\n.login-dialog .el-dialog__footer {\r\n  margin: 0 calc(50% - 80px);\r\n  padding-top: 0;\r\n  display: inline-block;\r\n}\r\n.login-dialog .dialog-footer .el-button {\r\n  width: 120px;\r\n}\r\n</style>\r\n<script>\r\nimport { reactive, computed, ref, onMounted } from 'vue'\r\nimport { useStore } from 'vuex'\r\n\r\nexport default {\r\n  name: 'login-dialog',\r\n\r\n  props: {\r\n    open: {\r\n      type: Boolean,\r\n      default: false\r\n    }\r\n  },\r\n\r\n  setup(props, { emit }) {\r\n    const store = useStore()\r\n    // 마운드 이후 바인딩 될 예정 - 컨텍스트에 노출시켜야함. <return>\r\n    const loginForm = ref(null)\r\n\r\n    /*\r\n      // Element UI Validator\r\n      // rules의 객체 키 값과 form의 객체 키 값이 같아야 매칭되어 적용됨\r\n      //\r\n    */\r\n    const state = reactive({\r\n      form: {\r\n        id: '',\r\n        password: '',\r\n        align: 'left'\r\n      },\r\n      rules: {\r\n        id: [\r\n          { required: true, message: 'Please input ID', trigger: 'blur' }\r\n        ],\r\n        password: [\r\n          { required: true, message: 'Please input password', trigger: 'blur' }\r\n        ]\r\n      },\r\n      dialogVisible: computed(() => props.open),\r\n      formLabelWidth: '120px'\r\n    })\r\n\r\n    onMounted(() => {\r\n      // console.log(loginForm.value)\r\n    })\r\n\r\n    const clickLogin = function () {\r\n      // 로그인 클릭 시 validate 체크 후 그 결과 값에 따라, 로그인 API 호출 또는 경고창 표시\r\n      loginForm.value.validate((valid) => {\r\n        if (valid) {\r\n          console.log('submit')\r\n          store.dispatch('root/requestLogin', { id: state.form.id, password: state.form.password })\r\n          .then(function (result) {\r\n            alert('accessToken: ' + result.data.accessToken)\r\n            sessionStorage.setItem(\"Authorization\", result.data.accessToken)\r\n          })\r\n          .catch(function (err) {\r\n            alert(err)\r\n          })\r\n        } else {\r\n          alert('Validate error!')\r\n        }\r\n      });\r\n    }\r\n\r\n    const handleClose = function () {\r\n      state.form.id = ''\r\n      state.form.password = ''\r\n      emit('closeLoginDialog')\r\n    }\r\n\r\n\r\n\r\n    return { loginForm, state, clickLogin, handleClose }\r\n  }\r\n}\r\n</script>\r\n"]}]}