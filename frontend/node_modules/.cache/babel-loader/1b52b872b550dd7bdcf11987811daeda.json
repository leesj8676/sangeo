{"remainingRequest":"C:\\Users\\SSAFY\\Documents\\GitHub\\S07P12E207\\frontend\\node_modules\\thread-loader\\dist\\cjs.js!C:\\Users\\SSAFY\\Documents\\GitHub\\S07P12E207\\frontend\\node_modules\\babel-loader\\lib\\index.js!C:\\Users\\SSAFY\\Documents\\GitHub\\S07P12E207\\frontend\\src\\views\\main\\store\\state.js","dependencies":[{"path":"C:\\Users\\SSAFY\\Documents\\GitHub\\S07P12E207\\frontend\\src\\views\\main\\store\\state.js","mtime":1658984334201},{"path":"C:\\Users\\SSAFY\\Documents\\GitHub\\S07P12E207\\frontend\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\SSAFY\\Documents\\GitHub\\S07P12E207\\frontend\\node_modules\\thread-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\SSAFY\\Documents\\GitHub\\S07P12E207\\frontend\\node_modules\\babel-loader\\lib\\index.js","mtime":315532800000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ly8gUk9PVCBTVEFURSDrs4DsiJgg7KCV7J2YIOuwjyDquLDrs7jqsJIg64yA7J6FCnZhciBtZW51RGF0YSA9IHJlcXVpcmUoJ0Avdmlld3MvbWFpbi9tZW51Lmpzb24nKTsKLyoqDQogKiDtlIzrnqvtj7wg6rSA66CoIOygleuztOuhnCDrjbDsiqTtgaztg5Hsnbjsp4AsIOuqqOuwlOydvOyduOyngCDtjJDrs4QgLSDtlZjsnbTruIzrpqzrk5wg7JWxIOuMgOu5hA0KICovCgoKZnVuY3Rpb24gZ2V0SXNEZXNrdG9wKCkgewogIHZhciB1c2VyQWdlbnQgPSB3aW5kb3cubmF2aWdhdG9yLnVzZXJBZ2VudCwKICAgICAgcGxhdGZvcm0gPSB3aW5kb3cubmF2aWdhdG9yLnBsYXRmb3JtLAogICAgICBtYWNvc1BsYXRmb3JtcyA9IFsnTWFjaW50b3NoJywgJ01hY0ludGVsJywgJ01hY1BQQycsICdNYWM2OEsnXSwKICAgICAgd2luZG93c1BsYXRmb3JtcyA9IFsnV2luMzInLCAnV2luNjQnLCAnV2luZG93cycsICdXaW5DRSddLAogICAgICBpb3NQbGF0Zm9ybXMgPSBbJ2lQaG9uZScsICdpUGFkJywgJ2lQb2QnXSwKICAgICAgb3MgPSBudWxsOwoKICBpZiAobWFjb3NQbGF0Zm9ybXMuaW5kZXhPZihwbGF0Zm9ybSkgIT09IC0xKSB7CiAgICAvL0Rlc2t0b3AgLSBNYWMKICAgIHJldHVybiB0cnVlOwogIH0gZWxzZSBpZiAoaW9zUGxhdGZvcm1zLmluZGV4T2YocGxhdGZvcm0pICE9PSAtMSkgewogICAgLy8gSU9TCiAgICByZXR1cm4gZmFsc2U7CiAgfSBlbHNlIGlmICh3aW5kb3dzUGxhdGZvcm1zLmluZGV4T2YocGxhdGZvcm0pICE9PSAtMSkgewogICAgLy9EZXNrdG9wIC0gd2luZG93CiAgICByZXR1cm4gdHJ1ZTsKICB9IGVsc2UgaWYgKC9BbmRyb2lkLy50ZXN0KHVzZXJBZ2VudCkpIHsKICAgIC8vQW5kcm9pZAogICAgcmV0dXJuIGZhbHNlOwogIH0gZWxzZSBpZiAoIW9zICYmIC9MaW51eC8udGVzdChwbGF0Zm9ybSkpIHsKICAgIC8vTGludXgKICAgIHJldHVybiB0cnVlOwogIH0KCiAgcmV0dXJuIG9zOwp9Cgp2YXIgSXNEZXNrdG9wID0gZ2V0SXNEZXNrdG9wKCk7CmV4cG9ydCBkZWZhdWx0IHsKICBpc0Rlc2t0b3BQbGF0Zm9ybTogSXNEZXNrdG9wLAogIGFjdGl2ZU1lbnU6ICdob21lJywKICBtZW51czogbWVudURhdGEKfTs="},{"version":3,"sources":["C:/Users/SSAFY/Documents/GitHub/S07P12E207/frontend/src/views/main/store/state.js"],"names":["menuData","require","getIsDesktop","userAgent","window","navigator","platform","macosPlatforms","windowsPlatforms","iosPlatforms","os","indexOf","test","IsDesktop","isDesktopPlatform","activeMenu","menus"],"mappings":"AAAA;AACA,IAAMA,QAAQ,GAAGC,OAAO,CAAC,wBAAD,CAAxB;AAEA;AACA;AACA;;;AACA,SAASC,YAAT,GAAwB;AACtB,MAAIC,SAAS,GAAGC,MAAM,CAACC,SAAP,CAAiBF,SAAjC;AAAA,MACIG,QAAQ,GAAGF,MAAM,CAACC,SAAP,CAAiBC,QADhC;AAAA,MAEIC,cAAc,GAAG,CAAC,WAAD,EAAc,UAAd,EAA0B,QAA1B,EAAoC,QAApC,CAFrB;AAAA,MAGIC,gBAAgB,GAAG,CAAC,OAAD,EAAU,OAAV,EAAmB,SAAnB,EAA8B,OAA9B,CAHvB;AAAA,MAIIC,YAAY,GAAG,CAAC,QAAD,EAAW,MAAX,EAAmB,MAAnB,CAJnB;AAAA,MAKIC,EAAE,GAAG,IALT;;AAOA,MAAIH,cAAc,CAACI,OAAf,CAAuBL,QAAvB,MAAqC,CAAC,CAA1C,EAA6C;AAAE;AAC7C,WAAO,IAAP;AACD,GAFD,MAEO,IAAIG,YAAY,CAACE,OAAb,CAAqBL,QAArB,MAAmC,CAAC,CAAxC,EAA2C;AAAE;AAClD,WAAO,KAAP;AACD,GAFM,MAEA,IAAIE,gBAAgB,CAACG,OAAjB,CAAyBL,QAAzB,MAAuC,CAAC,CAA5C,EAA+C;AAAE;AACtD,WAAO,IAAP;AACD,GAFM,MAEA,IAAI,UAAUM,IAAV,CAAeT,SAAf,CAAJ,EAA+B;AAAE;AACtC,WAAO,KAAP;AACD,GAFM,MAEA,IAAI,CAACO,EAAD,IAAO,QAAQE,IAAR,CAAaN,QAAb,CAAX,EAAmC;AAAE;AAC1C,WAAO,IAAP;AACD;;AAED,SAAOI,EAAP;AACD;;AAED,IAAMG,SAAS,GAAGX,YAAY,EAA9B;AAEA,eAAe;AACbY,EAAAA,iBAAiB,EAAED,SADN;AAEbE,EAAAA,UAAU,EAAE,MAFC;AAGbC,EAAAA,KAAK,EAAEhB;AAHM,CAAf","sourcesContent":["// ROOT STATE 변수 정의 및 기본값 대입\r\nconst menuData = require('@/views/main/menu.json')\r\n\r\n/**\r\n * 플랫폼 관련 정보로 데스크탑인지, 모바일인지 판별 - 하이브리드 앱 대비\r\n */\r\nfunction getIsDesktop() {\r\n  var userAgent = window.navigator.userAgent,\r\n      platform = window.navigator.platform,\r\n      macosPlatforms = ['Macintosh', 'MacIntel', 'MacPPC', 'Mac68K'],\r\n      windowsPlatforms = ['Win32', 'Win64', 'Windows', 'WinCE'],\r\n      iosPlatforms = ['iPhone', 'iPad', 'iPod'],\r\n      os = null;\r\n\r\n  if (macosPlatforms.indexOf(platform) !== -1) { //Desktop - Mac\r\n    return true\r\n  } else if (iosPlatforms.indexOf(platform) !== -1) { // IOS\r\n    return false\r\n  } else if (windowsPlatforms.indexOf(platform) !== -1) { //Desktop - window\r\n    return true\r\n  } else if (/Android/.test(userAgent)) { //Android\r\n    return false\r\n  } else if (!os && /Linux/.test(platform)) { //Linux\r\n    return true\r\n  }\r\n\r\n  return os;\r\n}\r\n\r\nconst IsDesktop = getIsDesktop()\r\n\r\nexport default {\r\n  isDesktopPlatform: IsDesktop,\r\n  activeMenu: 'home',\r\n  menus: menuData\r\n}\r\n"]}]}